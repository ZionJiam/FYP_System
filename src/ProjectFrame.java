
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 2014p
 */
public class ProjectFrame extends javax.swing.JFrame {

    /**
     * Creates new form ProjectFrame
     */
    public ProjectFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        printButton = new javax.swing.JButton();
        statButton = new javax.swing.JButton();
        eventButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        FYPSystemPanel = new javax.swing.JPanel();
        FYPSystemLogo = new javax.swing.JLabel();
        sortingPane = new javax.swing.JPanel();
        searchInput = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();
        sortingSchoolLabel = new javax.swing.JLabel();
        projectLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        projectList = new javax.swing.JList<>();
        studentPanel = new javax.swing.JPanel();
        studentPicture = new javax.swing.JLabel();
        studentAdminTextField = new javax.swing.JTextField();
        studentCourseTextField = new javax.swing.JTextField();
        studentNameTextField = new javax.swing.JTextField();
        studentNameLabel = new javax.swing.JLabel();
        studentAdminLabel = new javax.swing.JLabel();
        studentCourseLabel = new javax.swing.JLabel();
        studentGenderLabel = new javax.swing.JLabel();
        studentGenderTextField = new javax.swing.JTextField();
        projectPanel = new javax.swing.JPanel();
        projectSchoolLabel = new javax.swing.JLabel();
        projectTitleLabel = new javax.swing.JLabel();
        projectSupervisor = new javax.swing.JLabel();
        projectStudentsLabel = new javax.swing.JLabel();
        projectTitleTextField = new javax.swing.JTextField();
        projectSupervisorTextField = new javax.swing.JTextField();
        projectSchoolTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentList = new javax.swing.JList<>();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        printButton.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        printButton.setText("Save");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        statButton.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        statButton.setText("Statistics");
        statButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statButtonActionPerformed(evt);
            }
        });

        eventButton.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        eventButton.setText("Register Event");
        eventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventButtonActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        addButton.setText("Edit Project");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        FYPSystemPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        FYPSystemLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Logo.png"))); // NOI18N

        javax.swing.GroupLayout FYPSystemPanelLayout = new javax.swing.GroupLayout(FYPSystemPanel);
        FYPSystemPanel.setLayout(FYPSystemPanelLayout);
        FYPSystemPanelLayout.setHorizontalGroup(
            FYPSystemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FYPSystemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FYPSystemLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FYPSystemPanelLayout.setVerticalGroup(
            FYPSystemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FYPSystemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FYPSystemLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sortingPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Project", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 21))); // NOI18N

        searchInput.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInputActionPerformed(evt);
            }
        });

        searchLabel.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        searchLabel.setText("Search");

        sortingSchoolLabel.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        sortingSchoolLabel.setText("School");

        projectLabel.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        projectLabel.setText("Projects");

        schoolComboBox.setFont(new java.awt.Font("Tahoma", 0, 21)); // NOI18N
        schoolComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolComboBoxActionPerformed(evt);
            }
        });

        projectList.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        projectList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                projectListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(projectList);

        javax.swing.GroupLayout sortingPaneLayout = new javax.swing.GroupLayout(sortingPane);
        sortingPane.setLayout(sortingPaneLayout);
        sortingPaneLayout.setHorizontalGroup(
            sortingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sortingPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(sortingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(sortingPaneLayout.createSequentialGroup()
                        .addComponent(sortingSchoolLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(schoolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sortingPaneLayout.createSequentialGroup()
                        .addComponent(searchLabel)
                        .addGap(18, 18, 18)
                        .addGroup(sortingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(projectLabel)
                            .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38))
            .addGroup(sortingPaneLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sortingPaneLayout.setVerticalGroup(
            sortingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sortingPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sortingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortingSchoolLabel)
                    .addComponent(schoolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(sortingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchLabel))
                .addGap(25, 25, 25)
                .addComponent(projectLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 21))); // NOI18N

        studentPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Default.png"))); // NOI18N

        studentAdminTextField.setEditable(false);
        studentAdminTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        studentCourseTextField.setEditable(false);
        studentCourseTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        studentNameTextField.setEditable(false);
        studentNameTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        studentNameLabel.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        studentNameLabel.setText("Name");

        studentAdminLabel.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        studentAdminLabel.setText("Admin ID");

        studentCourseLabel.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        studentCourseLabel.setText("Course");

        studentGenderLabel.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        studentGenderLabel.setText("Gender");

        studentGenderTextField.setEditable(false);
        studentGenderTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout studentPanelLayout = new javax.swing.GroupLayout(studentPanel);
        studentPanel.setLayout(studentPanelLayout);
        studentPanelLayout.setHorizontalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentAdminLabel)
                    .addComponent(studentNameLabel)
                    .addComponent(studentCourseLabel)
                    .addComponent(studentGenderLabel))
                .addGap(48, 48, 48)
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentPanelLayout.createSequentialGroup()
                        .addComponent(studentGenderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(studentPanelLayout.createSequentialGroup()
                        .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentCourseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentAdminTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(studentPicture)
                        .addGap(76, 76, 76))))
        );
        studentPanelLayout.setVerticalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentNameLabel)
                            .addComponent(studentNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentAdminLabel)
                            .addComponent(studentAdminTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentCourseLabel)
                            .addComponent(studentCourseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(studentPicture)))
                .addGap(18, 18, 18)
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentGenderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentGenderLabel))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        projectPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Project Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 21))); // NOI18N

        projectSchoolLabel.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        projectSchoolLabel.setText("School");

        projectTitleLabel.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        projectTitleLabel.setText("Title");

        projectSupervisor.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        projectSupervisor.setText("Supervisor");

        projectStudentsLabel.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        projectStudentsLabel.setText("Students");

        projectTitleTextField.setEditable(false);
        projectTitleTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        projectSupervisorTextField.setEditable(false);
        projectSupervisorTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        projectSchoolTextField.setEditable(false);
        projectSchoolTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        studentList.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        studentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                studentListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(studentList);

        javax.swing.GroupLayout projectPanelLayout = new javax.swing.GroupLayout(projectPanel);
        projectPanel.setLayout(projectPanelLayout);
        projectPanelLayout.setHorizontalGroup(
            projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(projectPanelLayout.createSequentialGroup()
                        .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(projectTitleLabel)
                            .addComponent(projectSchoolLabel))
                        .addGap(55, 55, 55)
                        .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(projectTitleTextField)
                            .addComponent(projectSchoolTextField)))
                    .addGroup(projectPanelLayout.createSequentialGroup()
                        .addComponent(projectSupervisor)
                        .addGap(18, 18, 18)
                        .addComponent(projectSupervisorTextField)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, projectPanelLayout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addComponent(projectStudentsLabel)
                .addGap(110, 110, 110))
            .addGroup(projectPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        projectPanelLayout.setVerticalGroup(
            projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(projectSchoolTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, projectPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(projectSchoolLabel)))
                .addGap(18, 18, 18)
                .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(projectPanelLayout.createSequentialGroup()
                        .addComponent(projectTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, projectPanelLayout.createSequentialGroup()
                        .addComponent(projectTitleLabel)
                        .addGap(18, 18, 18)))
                .addGroup(projectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(projectSupervisorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectSupervisor))
                .addGap(18, 18, 18)
                .addComponent(projectStudentsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        clearButton.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sortingPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(eventButton)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(projectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(statButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(printButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(clearButton)))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(FYPSystemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sortingPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(projectPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(studentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(FYPSystemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventButtonActionPerformed

        new EventFrame().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_eventButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        new EditProjectForm().setVisible(true);
        EditProjectForm.setupForm();
        this.setVisible(false);
    }//GEN-LAST:event_addButtonActionPerformed

    private void statButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statButtonActionPerformed
        ProjectStatisticsFrame projStats = new ProjectStatisticsFrame();
        projStats.setVisible(true);
        ProjectFrame.this.setVisible(false);
    }//GEN-LAST:event_statButtonActionPerformed

    //For every selection of Projects in the combo box, change the details in the Information text box
    private void schoolComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolComboBoxActionPerformed
        //For every change to projectComboBox, change textbox information
        try {
            setLabels(schoolComboBox.getSelectedItem().toString());
        } catch (NullPointerException e) {
        }
    }//GEN-LAST:event_schoolComboBoxActionPerformed

    //Print button pressed, output file created in file directory as output.txt
    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        String project = "";
        ProjectCollection ProjectList = null;
        boolean hasSelected = false;
        //Validate for no selection of project from user
        if (projectList.getSelectedValue() != null) {
             String[] value = projectList.getSelectedValue().split(":");
             project = value[1].substring(1);
            ProjectList = ProjectFile.extractProjectDataFromFile();
            hasSelected = true;
        }

        if (hasSelected) {
            String output = ProjectFile.getOutput(ProjectList, project);
            System.out.println("Output: "+output);
            // Split each line for output to be executable
            String[] printOutput = output.split("\n"); //split method
            printOutput[0] = "Title:           " + printOutput[0];
            printOutput[1] = "School:          " + printOutput[1];
            printOutput[2] = "Supervisor:      " + printOutput[2];
            printOutput[3] = "Students:        " + printOutput[3];
            try {
                ProjectFile.printDesiredOutput(printOutput); //Print to output.txt, creates a file called output.txt if file not found
                JOptionPane.showMessageDialog(null, "Successfully printed", "Print", JOptionPane.INFORMATION_MESSAGE); //Successful Message when printed
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "ERROR", "ERROR", JOptionPane.ERROR_MESSAGE);
            } // Error Message when not printed
        } else {
            JOptionPane.showMessageDialog(null,
                    "No project was selected, Please try again", "ERROR",
                    JOptionPane.ERROR_MESSAGE); //Successful Message when printed
        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void projectListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_projectListValueChanged
        resetTextFields();
        try {
            ProjectCollection studentProject = ProjectFile.extractProjectDataFromFile();
            String[] value = projectList.getSelectedValue().split(":");
            String project = value[1].substring(1);
            DefaultListModel demoList = new DefaultListModel();
            for (int i = 0; i < studentProject.getNumOfProjects(); i++) {
                Project temp = (Project) studentProject.getProject(i);
                if (project.equals(temp.getTitle())) {
                    projectSchoolTextField.setText(temp.getSchool());
                    projectSupervisorTextField.setText(temp.getSupervisor());
                    projectTitleTextField.setText(temp.getTitle());
                    for (int x = 0; x < temp.getStudentList().getNumOfStudents(); x++) {
                        Student tempStud = (Student) temp.getStudentList().getStudent(x);
                        demoList.addElement(tempStud.getName());
                    }
                    break;
                }
            }
            studentList.setModel(demoList);
        } catch (NullPointerException ex) {
        }
    }//GEN-LAST:event_projectListValueChanged

    private void studentListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_studentListValueChanged
        String student = studentList.getSelectedValue();
        ProjectCollection studentProject = ProjectFile.extractProjectDataFromFile();
        for (int i = 0; i < studentProject.getNumOfProjects(); i++) {
            Project temp = (Project) studentProject.getProject(i);
            for (int x = 0; x < temp.getStudentList().getNumOfStudents(); x++) {
                Student tempStud = (Student) temp.getStudentList().getStudent(x);
                try {
                    if (student.equals(tempStud.getName())) {
                        studentNameTextField.setText(tempStud.getName());
                        studentCourseTextField.setText(tempStud.getCourse());
                        studentAdminTextField.setText(tempStud.getadminNum());
                        studentGenderTextField.setText(String.valueOf(tempStud.getGender()));
                        studentPicture.setIcon(getIcon(tempStud.getadminNum().toString()));
                        break;
                    }
                } catch (NullPointerException ex) {
                }
            }
        }
    }//GEN-LAST:event_studentListValueChanged

    private void searchInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInputActionPerformed
        resetTextFields();
        ProjectCollection studentProject = ProjectFile.extractProjectDataFromFile();
        String search = searchInput.getText();
        DefaultListModel demoList = new DefaultListModel();
        for (int x = 0, num = 1; x < studentProject.getNumOfProjects(); x++) {
            Project temp = (Project) studentProject.getProject(x);
            if (temp.getTitle().contains(search)) {
                demoList.addElement("Project " + num + ": " + temp.getTitle());
                num++;
            }
        }
        schoolComboBox.setSelectedIndex(0);
        projectList.setModel(demoList);
    }//GEN-LAST:event_searchInputActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        try {
                ProjectFile.clearOutput(); //Print to output.txt, creates a file called output.txt if file not found
                JOptionPane.showMessageDialog(null, "Successfully Cleared Output Text File", "Clear", JOptionPane.INFORMATION_MESSAGE); //Successful Message when printed
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "ERROR", "ERROR", JOptionPane.ERROR_MESSAGE);
            } // Error Message when not printed
        
        
    }//GEN-LAST:event_clearButtonActionPerformed

//Set labels for display for each respective labels
    private static void setLabels(String school) {
        ProjectCollection studentProject = ProjectFile.extractProjectDataFromFile();
        DefaultListModel demoList = new DefaultListModel();

        if (school.equals("Any")) {
            for (int x = 0, num = 1; x < studentProject.getNumOfProjects(); x++) {
                Project temp = (Project) studentProject.getProject(x);
                demoList.addElement("Project " + num + ": " + temp.getTitle());
                num++;
            }
        } else {
            //Set labels for project name, school and supervisor
            for (int x = 0, num = 1; x < studentProject.getNumOfProjects(); x++) {
                Project temp = (Project) studentProject.getProject(x);
                if (temp.getSchool().equals(school)) {
                    demoList.addElement("Project " + num + ": " + temp.getTitle());
                    num++;
                }
            }
        }

        projectList.setModel(demoList);
    }

    private Icon getIcon(String substring) {
        //This is assuming you pass in the substring from input.
        File file = new File("C:/Users/2014p/Documents/GitHub/FYP_System/src/img/"); //Change this to the directory you want to search in.
        Icon img = null;
        if (file.exists() && file.isDirectory()) {
            String[] files = file.list(); //get the files in String format.
            for (String fileName : files) {
                if (fileName.contains(substring)) //Get image with the same admin id as student
                {
                    img = new ImageIcon("C:/Users/2014p/Documents/GitHub/FYP_System/src/img/" + fileName);
                } else {
                    img = new ImageIcon("C:/Users/2014p/Documents/GitHub/FYP_System/src/img/Default.png");
                }
            }
        }

        return img; //return the list of filenames containing substring.
    }

    public static void resetTextFields() {
        //Reset Project TextFields
        projectSchoolTextField.setText("");
        projectTitleTextField.setText("");
        projectSupervisorTextField.setText("");

        //Reset Student TextFields
        studentNameTextField.setText("");
        studentAdminTextField.setText("");
        studentCourseTextField.setText("");
        studentGenderTextField.setText("");

        //Reset Label Image
        studentPicture.setIcon(new ImageIcon("C:/Users/2014p/Documents/GitHub/FYP_System/src/img/Default.png"));

        DefaultListModel demoList = new DefaultListModel();
        demoList.clear();
        studentList.setModel(demoList);
    }

    // Return List object of user chosen School
    public static List<Project> userSearchResult(String schName) {
        ProjectCollection studentProject = ProjectFile.extractProjectDataFromFile();
        List<Project> studentProjectResult = new ArrayList<>();

        //Return All "Any" || Some when user selects a school
        if (schName.equals("Any")) {
            for (int i = 0; i < studentProject.getNumOfProjects(); i++) {
                Project temp = (Project) studentProject.getProject(i);
                studentProjectResult.add(temp);
            }
        } else {
            for (int i = 0; i < studentProject.getNumOfProjects(); i++) {
                Project temp = (Project) studentProject.getProject(i);
                if (temp.getSchool().equals(schName)) {
                    studentProjectResult.add(temp);
                }
            }
        }

        //Find projects based on the school
        return studentProjectResult;
    }

    //Method to populate the Projects ComboBox
    public static void populateProjects(ProjectCollection allStudents) {
        setLabels("Any");
    }
//Method to populate the School ComboBox

    public static void populateSchools(ProjectCollection allStudents) {
        schoolComboBox.removeAllItems();
        schoolComboBox.addItem("Any");
        List<String> newList = new ArrayList<>();

        for (int i = 0; i < allStudents.getNumOfProjects(); i++) {
            Project temp = (Project) allStudents.getProject(i);
            if (!newList.contains(temp.getSchool())) {
                newList.add(temp.getSchool());
                schoolComboBox.addItem(temp.getSchool());
            }
        }
    }

    public static void populateComboBoxes() {
        ProjectCollection allStudents = ProjectFile.extractProjectDataFromFile();
        populateProjects(allStudents);
        populateSchools(allStudents);
    }

    //Main method calls for methods to populate the combo boxes at the start of the program
    public static void main(String[] args) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjectFrame().setVisible(true);
                populateComboBoxes();
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FYPSystemLogo;
    private javax.swing.JPanel FYPSystemPanel;
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton eventButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel projectLabel;
    private static javax.swing.JList<String> projectList;
    private javax.swing.JPanel projectPanel;
    private javax.swing.JLabel projectSchoolLabel;
    private static javax.swing.JTextField projectSchoolTextField;
    private javax.swing.JLabel projectStudentsLabel;
    private javax.swing.JLabel projectSupervisor;
    private static javax.swing.JTextField projectSupervisorTextField;
    private javax.swing.JLabel projectTitleLabel;
    private static javax.swing.JTextField projectTitleTextField;
    private static final javax.swing.JComboBox<String> schoolComboBox = new javax.swing.JComboBox<>();
    private javax.swing.JTextField searchInput;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JPanel sortingPane;
    private javax.swing.JLabel sortingSchoolLabel;
    private javax.swing.JButton statButton;
    private javax.swing.JLabel studentAdminLabel;
    private static javax.swing.JTextField studentAdminTextField;
    private javax.swing.JLabel studentCourseLabel;
    private static javax.swing.JTextField studentCourseTextField;
    private javax.swing.JLabel studentGenderLabel;
    private static javax.swing.JTextField studentGenderTextField;
    private static javax.swing.JList<String> studentList;
    private javax.swing.JLabel studentNameLabel;
    private static javax.swing.JTextField studentNameTextField;
    private javax.swing.JPanel studentPanel;
    private static javax.swing.JLabel studentPicture;
    // End of variables declaration//GEN-END:variables
}
